@page "/products"
@using BlazorStoreApp.Contracts
@using BlazorStoreApp.Models
@inject ILogger<Products> logger;
@inject IProduct productService;

<PageTitle>Products</PageTitle>

<h1>Products</h1>

@if (products.Any())
{
    <div class="products-container">
        @foreach (var product in products)
        {
            @if (!product.Images[0].ToString().Contains("[") || !product.Images[0].ToString().Contains("\""))
            {
                <div class="card">
                    <img class="img-top" src="@product.Images[0]" alt="Product" loading="lazy" width="270" height="210" />
                    <div class="card-body">
                        <h4><b>@product.Title</b></h4>
                        <p>@product.Price?.ToString("C")</p>
                    </div>
                </div>
            }
        }

    </div>
}
else
{
    <p>There is nothing to show.</p>
}


@code
{
    private List<Product> products;

    protected override async Task OnInitializedAsync()
    {
        products = await GetProducts();
    }

    private async Task<List<Product>> GetProducts()
    {
        return await productService.GetAsync();
    }

}
