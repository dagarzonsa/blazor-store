@page "/cart"

@using BlazorStoreApp.Models;
@using BlazorStoreApp.Services

@inject CartService cartService

<PageTitle>Cart</PageTitle>

<h1>Shopping Cart</h1>

@if (products != null && products.Any())
{
    <p role="status">Current Items: @products.Count</p>
    <button class="btn btn-primary" @onclick="ClearCart">Empty cart</button>

    <div class="products-container">
        @foreach (var product in products)
        {
            <div class="card">
                <img class="img-top" src="@product.Images[0].ToString()" alt="Product" loading="lazy" width="270" height="210" />
                <div class="card-body">
                    <h4><b>@product.Title</b></h4>
                    <p>@product.Price?.ToString("C")</p>
                    <button class="btn btn-danger" @onclick="() => RemoveFromCart(product.Id)">Eliminar</button>
                </div>
            </div>
        }
    </div>
}
else
{
    <p>There aren't any items in shopping cart.</p>
}

@code {
    private List<Product>? products;

    protected override void OnInitialized()
    {
        products = cartService.GetAsync();
    }

    private void RemoveFromCart(long productId)
    {
        cartService.DeleteAsync((int)productId);
        products = cartService.GetAsync();
        StateHasChanged();
    }

    private void ClearCart()
    {
        cartService.ClearAsync();
        products = cartService.GetAsync();
        StateHasChanged();
    }
}
