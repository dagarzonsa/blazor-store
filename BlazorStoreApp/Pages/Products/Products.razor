@page "/products"
@using BlazorStoreApp.Contracts
@using BlazorStoreApp.Models
@using BlazorStoreApp.Services
@inject ILogger<Products> logger;
@inject IProduct productService;
@inject NavigationManager navigationManager;
@inject CartService cartService

<PageTitle>Products</PageTitle>

<h1>Products</h1>

<button class="btn btn-dark" @onclick="@(() => navigationManager.NavigateTo("/addproduct"))">Add product</button>

@if (products.Any())
{
    <div class="products-container">
        @foreach (var product in products)
        {
            <div class="card">
                <img class="img-top" src="@product.Images[0].ToString()" alt="Product" loading="lazy" width="270" height="210" />
                <div class="card-body">
                    <h4><b>@product.Title</b></h4>
                    <p>@product.Price?.ToString("C")</p>
                    <button class="btn btn-success" @onclick="() => AddToCart(product)">Agregar al carrito</button>
                </div>
            </div>
        }

    </div>
}
else
{
    <p>There is nothing to show.</p>
}


@code
{
    private List<Product> products;

    protected override async Task OnInitializedAsync()
    {
        products = await GetProducts();
    }

    private async Task<List<Product>> GetProducts()
    {
        return await productService.GetAsync();
    }

    private void AddToCart(Product product)
    {
        cartService.AddAsync(product);
    }
}
